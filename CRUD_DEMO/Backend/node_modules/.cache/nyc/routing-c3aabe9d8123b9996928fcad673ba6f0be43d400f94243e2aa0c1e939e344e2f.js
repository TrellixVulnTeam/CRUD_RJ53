function cov_197i27eejb(){var path="C:\\Users\\91630\\Desktop\\CRUD_DEMO\\Backend\\src\\routes\\routing.js";var hash="0f7b295b401f536c14725c21cb01144f602cb11c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\91630\\Desktop\\CRUD_DEMO\\Backend\\src\\routes\\routing.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:16},end:{line:2,column:32}},"2":{start:{line:3,column:16},end:{line:3,column:42}},"3":{start:{line:11,column:0},end:{line:22,column:3}},"4":{start:{line:13,column:4},end:{line:21,column:5}},"5":{start:{line:14,column:19},end:{line:14,column:47}},"6":{start:{line:15,column:8},end:{line:18,column:9}},"7":{start:{line:16,column:12},end:{line:16,column:28}},"8":{start:{line:17,column:12},end:{line:17,column:99}},"9":{start:{line:20,column:8},end:{line:20,column:20}},"10":{start:{line:30,column:0},end:{line:42,column:3}},"11":{start:{line:32,column:4},end:{line:41,column:5}},"12":{start:{line:33,column:26},end:{line:33,column:34}},"13":{start:{line:34,column:19},end:{line:34,column:57}},"14":{start:{line:35,column:8},end:{line:38,column:9}},"15":{start:{line:36,column:12},end:{line:36,column:28}},"16":{start:{line:37,column:12},end:{line:37,column:89}},"17":{start:{line:40,column:8},end:{line:40,column:20}},"18":{start:{line:50,column:0},end:{line:61,column:3}},"19":{start:{line:52,column:4},end:{line:60,column:5}},"20":{start:{line:53,column:19},end:{line:53,column:50}},"21":{start:{line:54,column:8},end:{line:57,column:9}},"22":{start:{line:55,column:12},end:{line:55,column:28}},"23":{start:{line:56,column:12},end:{line:56,column:38}},"24":{start:{line:59,column:8},end:{line:59,column:20}},"25":{start:{line:70,column:0},end:{line:83,column:3}},"26":{start:{line:72,column:4},end:{line:82,column:5}},"27":{start:{line:73,column:8},end:{line:73,column:28}},"28":{start:{line:74,column:18},end:{line:74,column:31}},"29":{start:{line:75,column:19},end:{line:75,column:52}},"30":{start:{line:76,column:8},end:{line:79,column:9}},"31":{start:{line:77,column:12},end:{line:77,column:28}},"32":{start:{line:78,column:12},end:{line:78,column:71}},"33":{start:{line:81,column:8},end:{line:81,column:20}},"34":{start:{line:92,column:0},end:{line:104,column:3}},"35":{start:{line:94,column:4},end:{line:103,column:5}},"36":{start:{line:95,column:21},end:{line:95,column:29}},"37":{start:{line:96,column:19},end:{line:96,column:55}},"38":{start:{line:97,column:8},end:{line:100,column:9}},"39":{start:{line:98,column:12},end:{line:98,column:28}},"40":{start:{line:99,column:12},end:{line:99,column:74}},"41":{start:{line:102,column:8},end:{line:102,column:20}},"42":{start:{line:113,column:0},end:{line:125,column:2}},"43":{start:{line:115,column:4},end:{line:124,column:5}},"44":{start:{line:116,column:17},end:{line:116,column:30}},"45":{start:{line:117,column:22},end:{line:117,column:52}},"46":{start:{line:118,column:8},end:{line:121,column:9}},"47":{start:{line:119,column:12},end:{line:119,column:28}},"48":{start:{line:120,column:12},end:{line:120,column:42}},"49":{start:{line:123,column:8},end:{line:123,column:20}},"50":{start:{line:126,column:0},end:{line:126,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:23},end:{line:11,column:24}},loc:{start:{line:11,column:44},end:{line:22,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:28},end:{line:30,column:29}},loc:{start:{line:30,column:49},end:{line:42,column:1}},line:30},"2":{name:"(anonymous_2)",decl:{start:{line:50,column:31},end:{line:50,column:32}},loc:{start:{line:50,column:52},end:{line:61,column:1}},line:50},"3":{name:"(anonymous_3)",decl:{start:{line:70,column:37},end:{line:70,column:38}},loc:{start:{line:70,column:58},end:{line:83,column:1}},line:70},"4":{name:"(anonymous_4)",decl:{start:{line:92,column:30},end:{line:92,column:31}},loc:{start:{line:92,column:51},end:{line:104,column:1}},line:92},"5":{name:"(anonymous_5)",decl:{start:{line:113,column:31},end:{line:113,column:32}},loc:{start:{line:113,column:52},end:{line:125,column:1}},line:113}},branchMap:{"0":{loc:{start:{line:15,column:8},end:{line:18,column:9}},type:"if",locations:[{start:{line:15,column:8},end:{line:18,column:9}},{start:{line:15,column:8},end:{line:18,column:9}}],line:15},"1":{loc:{start:{line:35,column:8},end:{line:38,column:9}},type:"if",locations:[{start:{line:35,column:8},end:{line:38,column:9}},{start:{line:35,column:8},end:{line:38,column:9}}],line:35},"2":{loc:{start:{line:54,column:8},end:{line:57,column:9}},type:"if",locations:[{start:{line:54,column:8},end:{line:57,column:9}},{start:{line:54,column:8},end:{line:57,column:9}}],line:54},"3":{loc:{start:{line:76,column:8},end:{line:79,column:9}},type:"if",locations:[{start:{line:76,column:8},end:{line:79,column:9}},{start:{line:76,column:8},end:{line:79,column:9}}],line:76},"4":{loc:{start:{line:97,column:8},end:{line:100,column:9}},type:"if",locations:[{start:{line:97,column:8},end:{line:100,column:9}},{start:{line:97,column:8},end:{line:100,column:9}}],line:97},"5":{loc:{start:{line:118,column:8},end:{line:121,column:9}},type:"if",locations:[{start:{line:118,column:8},end:{line:121,column:9}},{start:{line:118,column:8},end:{line:121,column:9}}],line:118}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0f7b295b401f536c14725c21cb01144f602cb11c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_197i27eejb=function(){return actualCoverage;};}return actualCoverage;}cov_197i27eejb();const express=(cov_197i27eejb().s[0]++,require('express'));//importing express module
const routing=(cov_197i27eejb().s[1]++,express.Router());//creating router object
const service=(cov_197i27eejb().s[2]++,require("../service/data"));//importing service module
/*
   routing.get() : invoked on /setupDB path
   if data is inserted successfully
   returns status code 201 with json response.
   else throw error.
*/cov_197i27eejb().s[3]++;routing.get('/setupDB',async(req,res,next)=>{cov_197i27eejb().f[0]++;cov_197i27eejb().s[4]++;try{let data=(cov_197i27eejb().s[5]++,await service.insertScript());cov_197i27eejb().s[6]++;if(data){cov_197i27eejb().b[0][0]++;cov_197i27eejb().s[7]++;res.status(201);cov_197i27eejb().s[8]++;res.json({message:`Script Insertion Successfull, ${data.length} documents inserted`});}else{cov_197i27eejb().b[0][1]++;}}catch(error){cov_197i27eejb().s[9]++;next(error);}});/*
   routing.post() : invoked on /addEmployee path
   if employee inserted successfully then 
   returns status code 201 with json response.
   else throw error.
*/cov_197i27eejb().s[10]++;routing.post('/addEmployee',async(req,res,next)=>{cov_197i27eejb().f[1]++;cov_197i27eejb().s[11]++;try{let employeeObj=(cov_197i27eejb().s[12]++,req.body);let data=(cov_197i27eejb().s[13]++,await service.addEmployee(employeeObj));cov_197i27eejb().s[14]++;if(data){cov_197i27eejb().b[1][0]++;cov_197i27eejb().s[15]++;res.status(201);cov_197i27eejb().s[16]++;res.json({message:`Employee  inserted successfully : ${data.EmployeeId}`});}else{cov_197i27eejb().b[1][1]++;}}catch(error){cov_197i27eejb().s[17]++;next(error);}});/*
   routing.get() : invoked on /getAllEmployees path
   if employee documents found successfully then 
   returns status code 201 with json response.
   else throw error.
*/cov_197i27eejb().s[18]++;routing.get('/getAllEmployees',async(req,res,next)=>{cov_197i27eejb().f[2]++;cov_197i27eejb().s[19]++;try{let data=(cov_197i27eejb().s[20]++,await service.getAllEmployees());cov_197i27eejb().s[21]++;if(data){cov_197i27eejb().b[2][0]++;cov_197i27eejb().s[22]++;res.status(201);cov_197i27eejb().s[23]++;res.json({message:data});}else{cov_197i27eejb().b[2][1]++;}}catch(error){cov_197i27eejb().s[24]++;next(error);}});/*
   routing.delete() : invoked on /deleteEmployee/:id path
   if employee document deleted successfully then 
   returns status code 201 with json response.
   else throw error.
*/cov_197i27eejb().s[25]++;routing.delete('/deleteEmployee/:id',async(req,res,next)=>{cov_197i27eejb().f[3]++;cov_197i27eejb().s[26]++;try{cov_197i27eejb().s[27]++;console.log('hello');let eid=(cov_197i27eejb().s[28]++,req.params.id);let data=(cov_197i27eejb().s[29]++,await service.deleteEmployee(eid));cov_197i27eejb().s[30]++;if(data){cov_197i27eejb().b[3][0]++;cov_197i27eejb().s[31]++;res.status(201);cov_197i27eejb().s[32]++;res.json({message:`EmployeeId ${eid} Employee deleted`});}else{cov_197i27eejb().b[3][1]++;}}catch(error){cov_197i27eejb().s[33]++;next(error);}});/*
   routing.put() : invoked on /updateEmployee path
   if employee document updated successfully then 
   returns status code 201 with json response.
   else throw error.
*/cov_197i27eejb().s[34]++;routing.put('/updateEmployee',async(req,res,next)=>{cov_197i27eejb().f[4]++;cov_197i27eejb().s[35]++;try{let empObj=(cov_197i27eejb().s[36]++,req.body);let data=(cov_197i27eejb().s[37]++,await service.updateEmployee(empObj));cov_197i27eejb().s[38]++;if(data){cov_197i27eejb().b[4][0]++;cov_197i27eejb().s[39]++;res.status(201);cov_197i27eejb().s[40]++;res.json({message:`${empObj.EmployeeId} Employee updated`});}else{cov_197i27eejb().b[4][1]++;}}catch(error){cov_197i27eejb().s[41]++;next(error);}});/*
   routing.get() : invoked on /getEmployee/:id path
   if employee document found successfully then 
   returns status code 201 with json response.
   else throw error.
*/cov_197i27eejb().s[42]++;routing.get('/getEmployee/:id',async(req,res,next)=>{cov_197i27eejb().f[5]++;cov_197i27eejb().s[43]++;try{let id=(cov_197i27eejb().s[44]++,req.params.id);let empData=(cov_197i27eejb().s[45]++,await service.readEmployee(id));cov_197i27eejb().s[46]++;if(empData){cov_197i27eejb().b[5][0]++;cov_197i27eejb().s[47]++;res.status(201);cov_197i27eejb().s[48]++;res.json({message:empData});}else{cov_197i27eejb().b[5][1]++;}}catch(error){cov_197i27eejb().s[49]++;next(error);}});cov_197i27eejb().s[50]++;module.exports=routing;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,